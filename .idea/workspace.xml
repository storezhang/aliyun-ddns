<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="b40ba5bc-9ec5-475c-a4b4-f4ade3e30968" name="Default Changelist" comment="">
      <change beforePath="$PROJECT_DIR$/docker/etc/s6/ddns/run" beforeDir="false" afterPath="$PROJECT_DIR$/docker/etc/s6/ddns/run" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file://$PROJECT_DIR$/../../../../Developments/Google/Golang/go1.18.3" />
  <component name="Git.Settings">
    <option name="PUSH_TAGS">
      <GitPushTagMode>
        <option name="argument" value="--tags" />
        <option name="title" value="All" />
      </GitPushTagMode>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
    <option name="UPDATE_TYPE" value="MERGE" />
  </component>
  <component name="GoLibraries">
    <option name="indexEntireGoPath" value="true" />
  </component>
  <component name="IgnoredFileRootStore">
    <option name="generatedRoots">
      <set>
        <option value="D:\Workspaces\Jetbrains\songjiang\.idea" />
      </set>
    </option>
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="1UExnkJiPqw1e6ld5GwTH60cOKc" />
  <component name="ProjectLevelVcsManager">
    <OptionsSetting value="false" id="Update" />
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RunOnceActivity.go.format.on.save.advertiser.fired": "true",
    "RunOnceActivity.go.formatter.settings.were.checked": "true",
    "RunOnceActivity.go.migrated.go.modules.settings": "true",
    "RunOnceActivity.go.modules.go.list.on.any.changes.was.set": "true",
    "RunOnceActivity.go.watchers.conflict.with.on.save.actions.check.performed": "true",
    "WebServerToolWindowFactoryState": "false",
    "go.import.settings.migrated": "true",
    "go.sdk.automatically.set": "true",
    "last_opened_file_path": "D:/Workspaces/Jetbrains/dockerat/alpine",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "settings.editor.selected.configurable": "go.vgo"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="E:\Workspaces\Jetbrains\ddns" />
    </key>
    <key name="CopyFile.RECENT_KEYS">
      <recent name="E:\Workspaces\Jetbrains\ddns" />
      <recent name="E:\Workspaces\Jetbrains\songjiang" />
    </key>
  </component>
  <component name="RunManager" selected="Docker.ddns">
    <configuration default="true" type="GoApplicationRunConfiguration" factoryName="Go Application">
      <module name="ddns" />
      <working_directory value="$PROJECT_DIR$/" />
      <go_parameters value="-i" />
      <kind value="FILE" />
      <package value="ddns" />
      <directory value="$PROJECT_DIR$/" />
      <filePath value="$PROJECT_DIR$/" />
      <method v="2" />
    </configuration>
    <configuration name="ddns" type="GoApplicationRunConfiguration" factoryName="Go Application">
      <module name="ddns" />
      <working_directory value="$PROJECT_DIR$/" />
      <go_parameters value="-i" />
      <kind value="DIRECTORY" />
      <package value="ddns" />
      <directory value="$PROJECT_DIR$/" />
      <filePath value="$PROJECT_DIR$/" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="GoTestRunConfiguration" factoryName="Go Test">
      <module name="ddns" />
      <working_directory value="$PROJECT_DIR$/" />
      <go_parameters value="-i" />
      <kind value="DIRECTORY" />
      <package value="ddns" />
      <directory value="$PROJECT_DIR$/" />
      <filePath value="$PROJECT_DIR$/" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <configuration name="ddns" type="docker-deploy" factoryName="dockerfile" server-name="Docker">
      <deployment type="dockerfile">
        <settings>
          <option name="imageTag" value="storezhang/ddns" />
          <option name="containerName" value="Ddns" />
          <option name="sourceFilePath" value="Dockerfile" />
          <option name="volumeBindings">
            <list>
              <DockerVolumeBindingImpl>
                <option name="containerPath" value="/config" />
                <option name="hostPath" value="/home/storezhang/data/docker/ddns/" />
              </DockerVolumeBindingImpl>
            </list>
          </option>
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration default="true" type="js.build_tools.gulp">
      <node-interpreter>project</node-interpreter>
      <node-options />
      <gulpfile />
      <tasks />
      <arguments />
      <envs />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Docker.ddns" />
      <item itemvalue="Go Build.ddns" />
    </list>
  </component>
  <component name="ServiceViewManager">
    <option name="viewStates">
      <list>
        <serviceView>
          <option name="contentProportion" value="0.17301232" />
          <treeState>
            <expand />
            <select />
          </treeState>
        </serviceView>
      </list>
    </option>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.History.Properties">
    <option name="COLUMN_ORDER">
      <list>
        <option value="0" />
        <option value="2" />
        <option value="3" />
        <option value="1" />
      </list>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="项目初始化" />
    <MESSAGE value="增加hao4k" />
    <MESSAGE value="修复Hao4k签到" />
    <MESSAGE value="增加模板" />
    <MESSAGE value="去掉某些日志" />
    <MESSAGE value="收工" />
    <MESSAGE value="修复Docker打包" />
    <MESSAGE value="增加超时" />
    <MESSAGE value="修复不正确的字段命名" />
    <MESSAGE value="修复drone docker任务只能在tag下执行" />
    <MESSAGE value="修复docker打包" />
    <MESSAGE value="增加重试机制" />
    <MESSAGE value="修复CI/CD" />
    <MESSAGE value="修复重试机制" />
    <MESSAGE value="调整执行时间" />
    <MESSAGE value="修复日志记录" />
    <MESSAGE value="增加重试次数记录" />
    <MESSAGE value="修复重试次数从0开始计数" />
    <MESSAGE value="代码调整" />
    <MESSAGE value="修复任务数据串了" />
    <MESSAGE value="增加协程，增加性能" />
    <MESSAGE value="bugfix(启动): 修复权限问题" />
    <option name="LAST_COMMIT_MESSAGE" value="bugfix(启动): 修复权限问题" />
  </component>
  <component name="VgoProject">
    <environment>
      <map>
        <entry key="GOPROXY" value="https://goproxy.io,direct" />
      </map>
    </environment>
    <settings-migrated>true</settings-migrated>
  </component>
</project>